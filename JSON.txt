4. Создать внешний репозиторий c названием JSON. (https:girbush> repositories>new>name/JSON>CR)
 5. Клонировать репозиторий JSON на локальный компьютер.  (git clone https…..)
 6. Внутри локального JSON создать файл “new.json”. (touch new.json)
 7. Добавить файл под гит. ( git add .)
 8. Закоммитить файл. ( git commit –m “Added new”)
 9. Отправить файл на внешний GitHub репозиторий. (git push)
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.( nano new.json)
 11. Отправить изменения на внешний репозиторий. (git add .,  git commit –m ‘update new’)
 12. Создать файл preferences.json (touch preferences.json)
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. (nano preferences.json)
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON (touch skills.json, nano skills.json)
 15. Отправить сразу 2 файла на внешний репозиторий. (git add ., git commit –m “added pr and sk”).
 16. На веб интерфейсе создать файл bug_report.json. (https: gitbush>add file> create new file> name/ bug_report.json>commit new file ).
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. (https: gitbush>bug_report.json> edit this file> изменения>commit changes ).
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. (https: gitbush>bug_report.json> edit this file> изменения>commit changes ).
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. (https: gitbush>bug_report.json> edit this file> commit/изменения>commit changes ).
 20. Синхронизировать внешний и локальный репозиторий JSON (git pull)



123
